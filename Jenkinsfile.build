pipeline {
  agent {
    kubernetes {
      label 'pod'
        containerTemplate {
          name 'helm'
            image 'docker:dind'
            ttyEnabled true
            command 'cat'
        }
    }
  }
  stages {
    stage('Build') {
      steps {
        sh '''
        echo "**** Compile and Create Build artifact  ****";\
	docker build -t strto-build -f build/Dockerfile.build . ;\
	echo "**** Copies Build Artifact from build step and bakes final image ****";\
	CONTAINER_ID=$$(docker create strto-build);\
	docker cp $$CONTAINER_ID:/opt/app/_build/prod/rel/insights/releases/0.0.1/strto.tar.gz . ;\
	docker rm -v $$CONTAINER_ID;\
	docker build -t ${AWS_DOCKER_IMAGE} -f build/Dockerfile.release .;\
	echo "**** Push docker image to AWS registry ****";\
	docker push ${AWS_DOCKER_IMAGE};\
        '''
      }
    }
    stage('Publish') {
      when {
        branch 'master'
      }
      steps {
        withDockerRegistry([ credentialsId: "6544de7e-17a4-4576-9b9b-e86bc1e4f903", url: "" ]) {
          sh 'docker push brightbox/terraform:latest'
            sh 'docker push brightbox/cli:latest'
        }
      }
    }
  }
}
